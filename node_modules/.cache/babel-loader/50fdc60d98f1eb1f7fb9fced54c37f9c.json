{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rcoro\\\\Documents\\\\UCLA\\\\ClassAssignments\\\\Homework\\\\project3\\\\project-3\\\\src\\\\components\\\\InputRecipe2\\\\InputRecipe2.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../Jumbotron\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List, ListItem } from \"../List/index\";\nimport { Input, TextArea, FormBtn } from \"../Form/index\"; //add link to navbar\n\nclass InputRecipe2 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      recipes: [],\n      title: \"\",\n      ingredients: \"\",\n      recipe: \"\"\n    };\n\n    this.loadRecipe = () => {\n      API.getRecipe().then(res => this.setState({\n        recipes: res.data,\n        title: \"\",\n        ingredients: \"\",\n        recipe: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.deleteRecipe = id => {\n      API.deleteRecipe(id).then(res => this.loadRecipe()).catch(err => console.log(err));\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.title && this.state.ingredients) {\n        API.saveRecipe({\n          title: this.state.title,\n          ingredients: this.state.ingredients,\n          recipe: this.state.recipe\n        }).then(res => this.loadRecipe()).catch(err => console.log(err));\n      }\n    };\n  }\n\n  // When the component mounts, load all recipes and save them to this.state.recipes\n  componentDidMount() {\n    this.loadRecipe();\n  } // Loads all recipes  and sets them to this.state.recipes\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      size: \"md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"What recipe should I check?\")), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: this.state.title,\n      onChange: this.handleInputChange,\n      name: \"title\",\n      placeholder: \"Title (required)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      value: this.state.ingredients,\n      onChange: this.handleInputChange,\n      name: \"ingredients\",\n      placeholder: \"ingredients (required)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextArea, {\n      value: this.state.recipe,\n      onChange: this.handleInputChange,\n      name: \"recipe\",\n      placeholder: \"recipe (required)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FormBtn, {\n      disabled: !(this.state.ingredients && this.state.title),\n      onClick: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Submit Recipe\"))), /*#__PURE__*/React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Recipes On My List\")), this.state.recipes.length ? /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, this.state.recipes.map(recipe => {\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: recipe._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/recipes/\" + recipe._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, recipe.title, \" by \", recipe.ingredients)), /*#__PURE__*/React.createElement(DeleteBtn, {\n        onClick: () => this.deleteRecipe(recipe._id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 23\n        }\n      }));\n    })) : /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"No Results to Display\"))));\n  }\n\n}\n\nexport default InputRecipe2;","map":{"version":3,"sources":["C:/Users/rcoro/Documents/UCLA/ClassAssignments/Homework/project3/project-3/src/components/InputRecipe2/InputRecipe2.js"],"names":["React","Component","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","InputRecipe2","state","recipes","title","ingredients","recipe","loadRecipe","getRecipe","then","res","setState","data","catch","err","console","log","deleteRecipe","id","handleChange","event","name","value","target","handleFormSubmit","preventDefault","saveRecipe","componentDidMount","render","handleInputChange","length","map","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../Jumbotron\";\nimport DeleteBtn from \"../DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../Grid\";\nimport { List, ListItem } from \"../List/index\";\nimport { Input, TextArea, FormBtn } from \"../Form/index\";\n//add link to navbar\n\nclass InputRecipe2 extends Component {\n  // Setting our component's initial state\n  state = {\n    recipes: [],\n    title: \"\",\n    ingredients: \"\",\n    recipe: \"\"\n  };\n\n  // When the component mounts, load all recipes and save them to this.state.recipes\n  componentDidMount() {\n    this.loadRecipe();\n  }\n\n  // Loads all recipes  and sets them to this.state.recipes\n  loadRecipe = () => {\n    API.getRecipe()\n      .then(res =>\n        this.setState({ recipes: res.data, title: \"\", ingredients: \"\", recipe: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a recipe from the database with a given id, then reloads recipes from the db\n  deleteRecipe = id => {\n    API.deleteRecipe(id)\n      .then(res => this.loadRecipe())\n      .catch(err => console.log(err));\n  };\n\n  // Handles updating component state when the user types into the input field\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, use the API.saverecipe method to save the recipe data\n  // Then reload recipes from the database\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.title && this.state.ingredients) {\n      API.saveRecipe({\n        title: this.state.title,\n        ingredients: this.state.ingredients,\n        recipe: this.state.recipe\n      })\n        .then(res => this.loadRecipe())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What recipe should I check?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.title}\n                onChange={this.handleInputChange}\n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <Input\n                value={this.state.ingredients}\n                onChange={this.handleInputChange}\n                name=\"ingredients\"\n                placeholder=\"ingredients (required)\"\n              />\n              <TextArea\n                value={this.state.recipe}\n                onChange={this.handleInputChange}\n                name=\"recipe\"\n                placeholder=\"recipe (required)\"\n              />\n              <FormBtn\n                disabled={!(this.state.ingredients && this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit Recipe\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Recipes On My List</h1>\n            </Jumbotron>\n            {this.state.recipes.length ? (\n              <List>\n                {this.state.recipes.map(recipe => {\n                  return (\n                    <ListItem key={recipe._id}>\n                      <a href={\"/recipes/\" + recipe._id}>\n                        <strong>\n                          {recipe.title} by {recipe.ingredients}\n                        </strong>\n                      </a>\n                      <DeleteBtn onClick={() => this.deleteRecipe(recipe._id)} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default InputRecipe2;\n"]},"metadata":{},"sourceType":"module"}